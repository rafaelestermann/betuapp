@page "/mybets"
@using betuapp.Shared
@layout MainLayoutLoggedIn
@inject HttpClient Http
@inject betuapp.Client.States.AuthenticationState authenticationstate
@inject betuapp.Client.States.DetailState detailState
@inject IUriHelper uriHelper


<h1>MyBets Page</h1>

<button onclick="@CreateBet" style="float:right;">Create Bet</button>
@if (bets == null)
{

}

else
{
    <h1>Open Bets</h1>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>DueDate</th>
                <th>Tip</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bet in bets.Where(x => !x.IstAbgeschlossen))
            {
            <tr>
                <td>@bet.Name.</td>
                <td>@bet.Description</td>
                <td>@bet.DueDate</td>
                <td>@bet.Tip</td>
                <td><button onclick=@(() => GoToDetail(bet.Id))>Detail</button></td>
                @if (bet.Challenger.Id == this.authenticationstate.loggedInAccount.Id)
                {
                    <td><button onclick=@(() => GoToEdit(bet.Id))>Edit</button></td>
                }
            </tr>
            }
        </tbody>
    </table>

    <h1>Closed Bets</h1>

    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>DueDate</th>
                <th>Tip</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bet in bets.Where(x => x.IstAbgeschlossen))
            {
            <tr>
                <td>@bet.Name.</td>
                <td>@bet.Description</td>
                <td>@bet.DueDate</td>
                <td>@bet.Tip</td>
                <td><button onclick=@(() => GoToDetail(bet.Id))>Detail</button></td>
            </tr>
            }
        </tbody>
    </table>
}


@functions{
    List<ExtentedBet> bets = new List<ExtentedBet>();

    protected override async Task OnInitAsync()
    {
        var loggedInAccountId = this.authenticationstate.loggedInAccount.Id;
        bets = await Http.GetJsonAsync<List<ExtentedBet>>("api/BetData/GetBetsByAccount/" + loggedInAccountId);
    }

    void GoToDetail(long betId)
    {
        this.detailState.ClickedBetDetail = this.bets.Where(x => x.Id == betId).First();
        this.uriHelper.NavigateTo("/betdetail");
    }

    void GoToEdit(long betId)
    {
        this.detailState.ClickedBetDetail = this.bets.Where(x => x.Id == betId).First();
        this.uriHelper.NavigateTo("/betedit");
    }

    private void CreateBet()
    {
        this.uriHelper.NavigateTo("/createbet");
    }

}
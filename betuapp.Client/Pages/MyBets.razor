@page "/mybets"
@using betuapp.Shared
@using Microsoft.AspNetCore.Components
@layout MainLayoutLoggedIn
@inject HttpClient Http
@inject betuapp.Client.States.AuthenticationState authenticationstate
@inject betuapp.Client.States.DetailState detailState
@inject IUriHelper uriHelper
<head>
    <link href="..//css/table.css" rel="stylesheet" />
</head>

<h1>MyBets Page</h1>

@if (bets == null)
{

}

else
{
    <div style="margin-bottom: 17px;">
        <h2 id="betsDescriptionHeader">Open Bets</h2>
        <button id="createButton" onclick="@CreateBet">Create Bet</button>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>DueDate</th>
                <th>Tip</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bet in bets.Where(x => !x.IstAbgeschlossen))
            {
                <tr>
                    <td><strong>@bet.Name</strong></td>
                    <td>@bet.Description</td>
                    <td>@bet.DueDate.Date</td>
                    <td>@bet.Tip</td>
                    <td><button onclick=@(() => GoToDetail(bet.Id)) id="actionButton">Detail</button></td>
                    @if (bet.Challenger.Id == this.authenticationstate.loggedInAccount.Id)
                    {
                        <td><button onclick=@(() => GoToEdit(bet.Id)) id="actionButton">Edit</button></td>
                    }
                    else
                    {
                        <td></td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <br />
    <br />
    <h2 id="betsDescriptionHeader">Closed Bets</h2>

    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>DueDate</th>
                <th>Tip</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bet in bets.Where(x => x.IstAbgeschlossen))
            {
                <tr>
                    <td><strong>@bet.Name</strong></td>
                    <td>@bet.Description</td>
                    <td>@bet.DueDate.Date</td>
                    <td>@bet.Tip</td>
                    <td><button onclick=@(() => GoToDetail(bet.Id)) id="actionButton">Detail</button></td>
                </tr>
            }
        </tbody>
    </table>
}


@functions{
    List<ExtentedBet> bets = new List<ExtentedBet>();
    List<AcceptanceCriterea> critereas;

    protected override async Task OnInitAsync()
    {
        var loggedInAccountId = this.authenticationstate.loggedInAccount.Id;
        bets = await Http.GetJsonAsync<List<ExtentedBet>>("api/BetData/GetBetsByAccount/" + loggedInAccountId);
        critereas = await Http.GetJsonAsync<List<AcceptanceCriterea>>("api/BetData/AcceptanceCritereas/");
    }

    void GoToDetail(long betId)
    {
        this.detailState.ClickedBetAcceptanceCritereas = critereas.Where(x => x.BetId == betId).ToList();
        this.detailState.ClickedBetDetail = this.bets.Where(x => x.Id == betId).First();
        this.uriHelper.NavigateTo("/betdetail");
    }

    void GoToEdit(long betId)
    {
        this.detailState.ClickedBetAcceptanceCritereas = critereas.Where(x => x.BetId == betId).ToList();
        this.detailState.ClickedBetDetail = this.bets.Where(x => x.Id == betId).First();
        this.uriHelper.NavigateTo("/betedit");
    }

    private void CreateBet()
    {
        this.uriHelper.NavigateTo("/createbet");
    }

}
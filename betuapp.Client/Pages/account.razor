@page "/account"
@layout MainLayoutLoggedIn
@inject betuapp.Client.States.AuthenticationState authenticationState
@inject betuapp.Client.States.DetailState detailState
@using betuapp.Shared
@using Microsoft.AspNetCore.Components
@inject HttpClient Http

<header>
    <link href="..//css/account.css" rel="stylesheet" />
</header>


<h1>My Account</h1>

<div id="owedTipDiv">
    <span id="ownedTipCircle">@DueTip</span>
    <span id="ownedTipText">Owned Tip</span>
</div>


@*Nachweis:
    https://www.freepikcompany.com/legal
    https://support.freepik.com/hc/en-us/articles/208976585-Attribution-How-when-and-where-*@

<div id="anonymousPerson">
    <img src="..//Logo/anonymousperson.svg" id="anonymousImage" alt="anonymous person symbol by www.freepik.com" />
    <p style="font-size: 10px; margin-right: 60px">www.freepik.com</p>
</div>


<table>
    <tr>
        <td><b style="margin-right: 90px;">Firstname:</b></td>
        <td></td>
        <td></td>
        <td>@Firstname</td>
    </tr>
    <tr>
        <td><b>Lastname:</b></td>
        <td></td>
        <td></td>
        <td>@Lastname</td>
    </tr>
    <tr>
        <td><b>Username:</b></td>
        <td></td>
        <td></td>
        <td>@Username</td>
    </tr>
    <tr>
        <td><b>Email:</b></td>
        <td></td>
        <td></td>
        <td>@Email</td>
    </tr>
    <tr>
        <td><b>Bets Won:</b></td>
        <td></td>
        <td></td>
        <td>@BetsWon</td>
    </tr>
    <tr>
        <td><b>Bets Lost:</b></td>
        <td></td>
        <td></td>
        <td>@BetsLost</td>
    </tr>
    <tr>
        <td><b>Bets Open:</b></td>
        <td></td>
        <td></td>
        <td>@BetsOpen</td>
    </tr>
</table>


@functions{
    public string Firstname;
    public string Lastname;
    public string Username;
    public string Email;
    public int BetsWon;
    public int BetsLost;
    public int BetsOpen;
    public long DueTip;

    protected override async Task OnInitAsync()
    {
        Firstname = this.authenticationState.loggedInAccount.Firstname;
        Lastname = this.authenticationState.loggedInAccount.Lastname;
        Username = this.authenticationState.loggedInAccount.Username;
        Email = this.authenticationState.loggedInAccount.Email;

        List<ExtentedBet> bets = await Http.GetJsonAsync<List<ExtentedBet>>("api/BetData/GetBetsByAccount/" + this.authenticationState.loggedInAccount.Id);

        foreach (var bet in bets.Where(x => x.IstAbgeschlossen))
        {
            if (bet.Challenger.Id == this.authenticationState.loggedInAccount.Id)
            {
                if (bet.ChallengerWon)
                {
                    BetsWon++;
                    DueTip += bet.Tip;
                }
                else
                {
                    BetsLost++;
                    DueTip -= bet.Tip;
                }
            }
            else
            {
                if (bet.ChallengerWon)
                {
                    BetsLost++;
                    DueTip -= bet.Tip;
                }
                else
                {
                    BetsWon++;
                    DueTip += bet.Tip;
                }
            }
        }

        BetsOpen = bets.Where(x => x.IstAbgeschlossen == false).Count();
    }
}
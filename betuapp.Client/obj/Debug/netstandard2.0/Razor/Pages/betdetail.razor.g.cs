#pragma checksum "C:\Users\sirh3e\source\repos\betuapp\betuapp.Client\Pages\betdetail.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d89a9306960b7e091c20d8ee4c12e6afc4951891"
// <auto-generated/>
#pragma warning disable 1591
namespace betuapp.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using betuapp.Client;
    using betuapp.Client.Shared;
    using betuapp.Shared;
    using Microsoft.AspNetCore.Components;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayoutLoggedIn))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/betdetail")]
    public class betdetail : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            builder.AddMarkupContent(0, "<head>\r\n    <link href=\"..//css/general.css\" rel=\"stylesheet\">\r\n    <link href=\"..//css/createbet.css\" rel=\"stylesheet\">\r\n</head>\r\n\r\n\r\n");
            builder.OpenElement(1, "div");
            builder.AddMarkupContent(2, "\r\n    ");
            builder.AddMarkupContent(3, "<a id=\"breadCrumbText\" href=\"/mybets\">MyBets</a>\r\n    ");
            builder.AddMarkupContent(4, "<a id=\"breadCrumbText\">/</a>\r\n    ");
            builder.OpenElement(5, "a");
            builder.AddAttribute(6, "href", "/betdetail");
            builder.AddContent(7, detailState.ClickedBetDetail.Name);
            builder.CloseElement();
            builder.AddMarkupContent(8, "\r\n");
            builder.CloseElement();
            builder.AddMarkupContent(9, "\r\n");
            builder.AddMarkupContent(10, "<h1>Bet Detail</h1>\r\n");
            builder.AddMarkupContent(11, "<label>Name:</label>\r\n");
            builder.OpenElement(12, "input");
            builder.AddAttribute(13, "type", "text");
            builder.AddAttribute(14, "name", "email");
            builder.AddAttribute(15, "placeholder", "Name");
            builder.AddAttribute(16, "readonly", true);
            builder.AddAttribute(17, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(Name));
            builder.AddAttribute(18, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => Name = __value, Name));
            builder.CloseElement();
            builder.AddMarkupContent(19, "\r\n");
            builder.AddMarkupContent(20, "<label>Description:</label>\r\n");
            builder.OpenElement(21, "textarea");
            builder.AddAttribute(22, "type", "text");
            builder.AddAttribute(23, "name", "pass");
            builder.AddAttribute(24, "placeholder", "Description");
            builder.AddAttribute(25, "readonly", true);
            builder.AddAttribute(26, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(Description));
            builder.AddAttribute(27, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => Description = __value, Description));
            builder.CloseElement();
            builder.AddMarkupContent(28, "\r\n");
            builder.AddMarkupContent(29, "<label>DueDate:</label>\r\n");
            builder.OpenElement(30, "input");
            builder.AddAttribute(31, "type", "datetime");
            builder.AddAttribute(32, "name", "cpass");
            builder.AddAttribute(33, "placeholder", "DueDate");
            builder.AddAttribute(34, "readonly", true);
            builder.AddAttribute(35, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(DueDate));
            builder.AddAttribute(36, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => DueDate = __value, DueDate));
            builder.CloseElement();
            builder.AddMarkupContent(37, "\r\n");
            builder.AddMarkupContent(38, "<label>Tip:</label>\r\n");
            builder.OpenElement(39, "input");
            builder.AddAttribute(40, "type", "number");
            builder.AddAttribute(41, "name", "cpass");
            builder.AddAttribute(42, "placeholder", "Tip");
            builder.AddAttribute(43, "readonly", true);
            builder.AddAttribute(44, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(Tip));
            builder.AddAttribute(45, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => Tip = __value, Tip));
            builder.CloseElement();
            builder.AddMarkupContent(46, "\r\n");
            builder.AddMarkupContent(47, "<label>Challenged Account:</label>\r\n");
            builder.OpenElement(48, "input");
            builder.AddAttribute(49, "type", "text");
            builder.AddAttribute(50, "name", "input");
            builder.AddAttribute(51, "value", challenged.Username);
            builder.AddAttribute(52, "readonly", true);
            builder.CloseElement();
            builder.AddMarkupContent(53, "\r\n");
            builder.AddMarkupContent(54, "<label>Acceptance Critereas:</label>\r\n");
            builder.OpenElement(55, "ul");
            builder.AddMarkupContent(56, "\r\n");
#line 34 "C:\Users\sirh3e\source\repos\betuapp\betuapp.Client\Pages\betdetail.razor"
     foreach (var criterea in AcceptanceCritereas)
    {

#line default
#line hidden
            builder.AddContent(57, "        ");
            builder.OpenElement(58, "li");
            builder.AddAttribute(59, "id", "listpoint");
            builder.AddContent(60, criterea.Text);
            builder.CloseElement();
            builder.AddMarkupContent(61, "\r\n");
#line 37 "C:\Users\sirh3e\source\repos\betuapp\betuapp.Client\Pages\betdetail.razor"
    }

#line default
#line hidden
            builder.CloseElement();
            builder.AddMarkupContent(62, "\r\n");
            builder.AddMarkupContent(63, "<label>Evidence:</label>\r\n");
            builder.OpenElement(64, "textarea");
            builder.AddAttribute(65, "type", "text");
            builder.AddAttribute(66, "name", "input");
            builder.AddAttribute(67, "style", "height: 200px;");
            builder.AddAttribute(68, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(Evidence));
            builder.AddAttribute(69, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => Evidence = __value, Evidence));
            builder.CloseElement();
            builder.AddMarkupContent(70, "\r\n");
            builder.AddMarkupContent(71, "<label style=\"display: block;\">Consent:</label>\r\n");
#line 42 "C:\Users\sirh3e\source\repos\betuapp\betuapp.Client\Pages\betdetail.razor"
 if (ConsentGiven == false)
{

#line default
#line hidden
            builder.AddContent(72, "    ");
            builder.OpenElement(73, "button");
            builder.AddAttribute(74, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, GiveConsent));
            builder.AddAttribute(75, "id", "consentButton");
            builder.AddContent(76, "Give Consent");
            builder.CloseElement();
            builder.AddMarkupContent(77, "\r\n");
#line 45 "C:\Users\sirh3e\source\repos\betuapp\betuapp.Client\Pages\betdetail.razor"
}
else
{

#line default
#line hidden
            builder.AddContent(78, "    ");
            builder.OpenElement(79, "button");
            builder.AddAttribute(80, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, GiveNotConsent));
            builder.AddAttribute(81, "id", "consentButton");
            builder.AddContent(82, "Give Consent not");
            builder.CloseElement();
            builder.AddMarkupContent(83, "\r\n    ");
            builder.OpenElement(84, "div");
            builder.AddMarkupContent(85, "\r\n        ");
            builder.AddMarkupContent(86, "<label style=\"display: block;\">challenger won</label>\r\n        ");
            builder.OpenElement(87, "input");
            builder.AddAttribute(88, "type", "checkbox");
            builder.AddAttribute(89, "id", "checkboxInput");
            builder.AddAttribute(90, "checked", Microsoft.AspNetCore.Components.BindMethods.GetValue(consentTrue));
            builder.AddAttribute(91, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => consentTrue = __value, consentTrue));
            builder.CloseElement();
            builder.AddMarkupContent(92, "<br>\r\n     \r\n    ");
            builder.CloseElement();
            builder.AddMarkupContent(93, "\r\n");
            builder.AddContent(94, "    ");
            builder.OpenElement(95, "div");
            builder.AddMarkupContent(96, "\r\n        ");
            builder.AddMarkupContent(97, "<label style=\"display: block;\">challenged won</label>\r\n        ");
            builder.OpenElement(98, "input");
            builder.AddAttribute(99, "id", "checkboxInput");
            builder.AddAttribute(100, "type", "checkbox");
            builder.AddAttribute(101, "checked", Microsoft.AspNetCore.Components.BindMethods.GetValue(consentFalse));
            builder.AddAttribute(102, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => consentFalse = __value, consentFalse));
            builder.CloseElement();
            builder.AddMarkupContent(103, "<br>\r\n    ");
            builder.CloseElement();
            builder.AddMarkupContent(104, "\r\n");
#line 59 "C:\Users\sirh3e\source\repos\betuapp\betuapp.Client\Pages\betdetail.razor"
}

#line default
#line hidden
            builder.AddMarkupContent(105, "\r\n\r\n\r\n");
            builder.OpenElement(106, "p");
            builder.AddAttribute(107, "class", "error");
            builder.AddContent(108, errormessage);
            builder.CloseElement();
            builder.AddMarkupContent(109, "\r\n");
            builder.OpenElement(110, "button");
            builder.AddAttribute(111, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, Save));
            builder.AddAttribute(112, "id", "createButton");
            builder.AddContent(113, "Save and Back");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 67 "C:\Users\sirh3e\source\repos\betuapp\betuapp.Client\Pages\betdetail.razor"
           
    public string errormessage;
    public string Name;
    public string Description;
    public DateTime DueDate;
    public long Tip;
    public Account challenged;
    public string Evidence;
    public bool consentTrue;
    public bool consentFalse;
    public bool ConsentGiven;
    public List<AcceptanceCriterea> AcceptanceCritereas;

    async Task GiveConsent()
    {
        ConsentGiven = true;
    }
    async Task GiveNotConsent()
    {
        ConsentGiven = false;
    }

    protected override async Task OnInitAsync()
    {
        AcceptanceCritereas = this.detailState.ClickedBetAcceptanceCritereas;
        this.Name = this.detailState.ClickedBetDetail.Name;
        this.Description = this.detailState.ClickedBetDetail.Description;
        this.DueDate = this.detailState.ClickedBetDetail.DueDate;
        this.Tip = this.detailState.ClickedBetDetail.Tip;
        this.challenged = this.detailState.ClickedBetDetail.Challenged;
        this.Evidence = this.detailState.ClickedBetDetail.Evidence;

        if (this.authenticationstate.loggedInAccount.Id == this.detailState.ClickedBetDetail.Challenger.Id)
        {
            ConsentGiven = this.detailState.ClickedBetDetail.ConsentChallengerGiven;
            if (this.detailState.ClickedBetDetail.ConsentChallengerGiven)
            {
                consentTrue = (this.detailState.ClickedBetDetail.ChallengerWonChallenger == true);
                consentFalse = !consentTrue;
            }
        }
        else
        {
            ConsentGiven = this.detailState.ClickedBetDetail.ConsentChallengedGiven;
            if (this.detailState.ClickedBetDetail.ConsentChallengedGiven)
            {
                consentTrue = (this.detailState.ClickedBetDetail.ChallengerWonChallenged == true);
                consentFalse = !consentTrue;
            }
        }
    }

    async Task Save()
    {
        if (ConsentGiven)
        {
            if (consentFalse == true && consentTrue == true)
            {
                errormessage = "invalid consent";
                return;
            }
            if (consentFalse == false && consentTrue == false)
            {
                errormessage = "invalid consent";
                return;
            }
        }

        var bet = this.detailState.ClickedBetDetail;
        bet.Evidence = this.Evidence;

        if (this.authenticationstate.loggedInAccount.Id == this.detailState.ClickedBetDetail.Challenger.Id)
        {
            bet.ConsentChallengerGiven = ConsentGiven;
        }
        else
        {
            bet.ConsentChallengedGiven = ConsentGiven;
        }

        if (this.authenticationstate.loggedInAccount.Id == this.detailState.ClickedBetDetail.Challenger.Id && ConsentGiven)
        {
            bet.ChallengerWonChallenger = this.consentTrue;
            bet.ConsentChallengerGiven = true;
        }
        if (this.authenticationstate.loggedInAccount.Id == this.detailState.ClickedBetDetail.Challenged.Id && ConsentGiven)
        {
            bet.ChallengerWonChallenged = this.consentTrue;
            bet.ConsentChallengedGiven = true;
        }

        if (bet.ChallengerWonChallenger == true && bet.ChallengerWonChallenger == bet.ChallengerWonChallenged && bet.ConsentChallengerGiven && bet.ConsentChallengedGiven)
        {
            bet.IstAbgeschlossen = true;
            bet.ChallengerWon = true;
        }
        if (bet.ChallengerWonChallenger == false && bet.ChallengerWonChallenger == bet.ChallengerWonChallenged && bet.ConsentChallengedGiven && bet.ConsentChallengerGiven)
        {
            bet.IstAbgeschlossen = true;
            bet.ChallengerWon = false;
        }

        if (bet.ConsentChallengedGiven != true || bet.ConsentChallengerGiven != true)
        {
            bet.IstAbgeschlossen = false;
        }

        if (bet.ChallengerWonChallenger != bet.ChallengerWonChallenged)
        {
            bet.IstAbgeschlossen = false;
        }

        var result = await Http.SendJsonAsync<ExtentedBet>(HttpMethod.Post, "api/BetData/UpdateBet", bet);
        this.uriHelper.NavigateTo("/MyBets");
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUriHelper uriHelper { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private betuapp.Client.States.DetailState detailState { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private betuapp.Client.States.AuthenticationState authenticationstate { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591

#pragma checksum "C:\Users\rafae\source\repos\betuapp\betuapp.Client\Pages\accountdetail.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c3fd86caafb6f8144438b78e103c86d91908f046"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace betuapp.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using betuapp.Client;
    using betuapp.Client.Shared;
    using betuapp.Shared;
    using Microsoft.AspNetCore.Components;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayoutLoggedIn))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/accountdetail")]
    public class accountdetail : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 76 "C:\Users\rafae\source\repos\betuapp\betuapp.Client\Pages\accountdetail.razor"
           
    public string Firstname;
    public string Lastname;
    public string Username;
    public string Email;
    public int BetsWon;
    public int BetsLost;
    public int BetsOpen;

    protected override async Task OnInitAsync()
    {
        Firstname = this.detailState.ClickedAccountDetail.Firstname;
        Lastname = this.detailState.ClickedAccountDetail.Lastname;
        Username = this.detailState.ClickedAccountDetail.Username;
        Email = this.detailState.ClickedAccountDetail.Email;

        List<ExtentedBet>
    bets = await Http.GetJsonAsync<List<ExtentedBet>>("api/BetData/GetBetsByAccount/" + this.detailState.ClickedAccountDetail.Id);

        foreach (var bet in bets.Where(x => x.IstAbgeschlossen))
        {
            if (bet.Challenger.Id == this.detailState.ClickedAccountDetail.Id)
            {
                if (bet.ChallengerWon)
                {
                    BetsWon++;
                }
                else
                {
                    BetsLost++;
                }
            }
            else
            {
                if (bet.ChallengerWon)
                {
                    BetsLost++;
                }
                else
                {
                    BetsWon++;
                }
            }
        }

        BetsOpen = bets.Where(x => x.IstAbgeschlossen == false).Count();
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private betuapp.Client.States.DetailState detailState { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private betuapp.Client.States.AuthenticationState authenticationState { get; set; }
    }
}
#pragma warning restore 1591

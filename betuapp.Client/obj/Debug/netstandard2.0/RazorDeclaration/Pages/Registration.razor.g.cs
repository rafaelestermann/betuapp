#pragma checksum "C:\Users\rafae\source\repos\betuapp\betuapp.Client\Pages\Registration.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "98d7a1fa5b12c94d8711fb126a4f450d28bf6f94"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace betuapp.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using betuapp.Client;
    using betuapp.Client.Shared;
    using betuapp.Shared;
    using betuapp.Client.Service;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/Registration")]
    public class Registration : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 43 "C:\Users\rafae\source\repos\betuapp\betuapp.Client\Pages\Registration.razor"
            
    int number = 10;
    IList<Account> accounts = new List<Account>();


    private async Task CountNumber()
    {
        number++;
    }


    private async Task Delete(Account acc)
    {
        Account createdAccount = await Http.SendJsonAsync<Account>(HttpMethod.Post, "api/AccountData/DeleteAccount", acc.Id);
        await Refresh();
    }

    private async Task Login()
    {
        var logindet = new LoginDetails()
        {
            Password = "SuperSecretPassword",
            Username = "admin"
        };

        this.state.Login(logindet);
    }


    public async Task CreateAccount()
    {
        number++;
        var account = new Account()
        {
            Firstname = "Tom",
            Lastname = "Clarke",
            Email = "tomclarek@hotmail.ch",
            Username = "tomcl",
            Password = "password",
            OwnedCash = 230
        };
        Account createdAccount = await Http.SendJsonAsync<Account>(HttpMethod.Post, "api/AccountData/CreateAccount", account);
        await Refresh();

    }
    private async Task Refresh()
    {
        accounts = await Http.GetJsonAsync<List<Account>>("api/AccountData/Accounts");
        StateHasChanged();
    }



    protected override async Task OnInitAsync()
    {
        accounts = await Http.GetJsonAsync<Account[]>("api/AccountData/Accounts");
    }


#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AppState state { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591

#pragma checksum "C:\Users\rafae\source\repos\betuapp\betuapp.Client\Pages\Registration - Kopieren.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1e67c3070571a46d269f1d60f7c27983e7cdb044"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace betuapp.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using betuapp.Client;
    using betuapp.Client.Shared;
    using betuapp.Shared;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/Registration")]
    public class Registration___Kopieren : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 38 "C:\Users\rafae\source\repos\betuapp\betuapp.Client\Pages\Registration - Kopieren.razor"
            
        int number = 10;
        IList<Account> accounts = new List<Account>();

        private async Task Delete(Account acc)
        {
            Account createdAccount = await Http.SendJsonAsync<Account>(HttpMethod.Post, "api/AccountData/DeleteAccount", acc.Id);
            await Refresh();           
        }

        private async Task CreateAccount()
        {
            number++;
            var account = new Account()
            {
                Firstname = "Tom",
                Lastname = "Clarke",
                Email = "tomclarek@hotmail.ch",
                Username = "tomcl",
                Password = "password",
                OwnedCash = 230
            };
            Account createdAccount = await Http.SendJsonAsync<Account>(HttpMethod.Post, "api/AccountData/CreateAccount", account);
            await Refresh();           

        }
        private async Task Refresh()
        {
            accounts = await Http.GetJsonAsync<List<Account>>("api/AccountData/Accounts");
            StateHasChanged();
        }



    protected override async Task OnInitAsync()
    {
        accounts = await Http.GetJsonAsync<Account[]>("api/AccountData/Accounts");
    }


#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591

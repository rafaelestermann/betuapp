#pragma checksum "C:\Users\rafae\source\repos\betuapp\betuapp.Client\Pages\betdetail.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "02dc36fd0736f4e4e9c3ee47f97b7e9d3ce27080"
// <auto-generated/>
#pragma warning disable 1591
namespace betuapp.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using betuapp.Client;
    using betuapp.Client.Shared;
    using Microsoft.AspNetCore.Components.Layouts;
    using betuapp.Shared;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayoutLoggedIn))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/betdetail")]
    public class betdetail : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            builder.OpenElement(0, "div");
            builder.AddAttribute(1, "id", "BreadCrumb");
            builder.AddMarkupContent(2, "\r\n    ");
            builder.AddMarkupContent(3, "<a href=\"/mybets\">MyBets</a>\r\n    ");
            builder.OpenElement(4, "a");
            builder.AddAttribute(5, "href", "/betdetail");
            builder.AddContent(6, "Detail ");
            builder.AddContent(7, detailState.ClickedBetDetail.Name);
            builder.CloseElement();
            builder.AddMarkupContent(8, "\r\n");
            builder.CloseElement();
            builder.AddMarkupContent(9, "\r\n\r\n");
            builder.OpenElement(10, "input");
            builder.AddAttribute(11, "type", "text");
            builder.AddAttribute(12, "name", "email");
            builder.AddAttribute(13, "placeholder", "Name");
            builder.AddAttribute(14, "readonly", true);
            builder.AddAttribute(15, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(Name));
            builder.AddAttribute(16, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => Name = __value, Name));
            builder.CloseElement();
            builder.AddMarkupContent(17, "\r\n");
            builder.OpenElement(18, "input");
            builder.AddAttribute(19, "type", "text");
            builder.AddAttribute(20, "name", "pass");
            builder.AddAttribute(21, "placeholder", "Description");
            builder.AddAttribute(22, "readonly", true);
            builder.AddAttribute(23, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(Description));
            builder.AddAttribute(24, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => Description = __value, Description));
            builder.CloseElement();
            builder.AddMarkupContent(25, "\r\n");
            builder.OpenElement(26, "input");
            builder.AddAttribute(27, "type", "datetime");
            builder.AddAttribute(28, "name", "cpass");
            builder.AddAttribute(29, "placeholder", "DueDate");
            builder.AddAttribute(30, "readonly", true);
            builder.AddAttribute(31, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(DueDate));
            builder.AddAttribute(32, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => DueDate = __value, DueDate));
            builder.CloseElement();
            builder.AddMarkupContent(33, "\r\n");
            builder.OpenElement(34, "input");
            builder.AddAttribute(35, "type", "number");
            builder.AddAttribute(36, "name", "cpass");
            builder.AddAttribute(37, "placeholder", "Tip");
            builder.AddAttribute(38, "readonly", true);
            builder.AddAttribute(39, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(Tip));
            builder.AddAttribute(40, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => Tip = __value, Tip));
            builder.CloseElement();
            builder.AddMarkupContent(41, "\r\n");
            builder.OpenElement(42, "input");
            builder.AddAttribute(43, "type", "text");
            builder.AddAttribute(44, "name", "input");
            builder.AddAttribute(45, "value", challenged.Username);
            builder.AddAttribute(46, "readonly", true);
            builder.CloseElement();
            builder.AddMarkupContent(47, "\r\n");
            builder.OpenElement(48, "input");
            builder.AddAttribute(49, "type", "text");
            builder.AddAttribute(50, "name", "input");
            builder.AddAttribute(51, "value", Evidence);
            builder.CloseElement();
            builder.AddMarkupContent(52, "\r\n\r\n");
#line 22 "C:\Users\rafae\source\repos\betuapp\betuapp.Client\Pages\betdetail.razor"
 if (ConsentGiven == false)
{

#line default
#line hidden
            builder.AddContent(53, "    ");
            builder.OpenElement(54, "button");
            builder.AddAttribute(55, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, GiveConsent));
            builder.AddContent(56, "Give Consent");
            builder.CloseElement();
            builder.AddMarkupContent(57, "\r\n");
#line 25 "C:\Users\rafae\source\repos\betuapp\betuapp.Client\Pages\betdetail.razor"
}
else
{

#line default
#line hidden
            builder.AddContent(58, "    ");
            builder.OpenElement(59, "button");
            builder.AddAttribute(60, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, GiveNotConsent));
            builder.AddContent(61, "Give Consent not");
            builder.CloseElement();
            builder.AddMarkupContent(62, "\r\n    ");
            builder.AddMarkupContent(63, "<h3>consent:</h3>\r\n    ");
            builder.OpenElement(64, "div");
            builder.AddMarkupContent(65, "\r\n        ");
            builder.OpenElement(66, "input");
            builder.AddAttribute(67, "type", "checkbox");
            builder.AddAttribute(68, "checked", Microsoft.AspNetCore.Components.BindMethods.GetValue(consentTrue));
            builder.AddAttribute(69, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => consentTrue = __value, consentTrue));
            builder.CloseElement();
            builder.AddMarkupContent(70, "<br>\r\n        ");
            builder.AddMarkupContent(71, "<label for=\"scales\">challenger won</label>\r\n    ");
            builder.CloseElement();
            builder.AddMarkupContent(72, "\r\n");
            builder.AddContent(73, "    ");
            builder.OpenElement(74, "div");
            builder.AddMarkupContent(75, "\r\n        ");
            builder.OpenElement(76, "input");
            builder.AddAttribute(77, "type", "checkbox");
            builder.AddAttribute(78, "checked", Microsoft.AspNetCore.Components.BindMethods.GetValue(consentFalse));
            builder.AddAttribute(79, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => consentFalse = __value, consentFalse));
            builder.CloseElement();
            builder.AddMarkupContent(80, "<br>\r\n        ");
            builder.AddMarkupContent(81, "<label for=\"scales\">challenged won</label>\r\n    ");
            builder.CloseElement();
            builder.AddMarkupContent(82, "\r\n");
#line 39 "C:\Users\rafae\source\repos\betuapp\betuapp.Client\Pages\betdetail.razor"
}

#line default
#line hidden
            builder.OpenElement(83, "button");
            builder.AddAttribute(84, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, Save));
            builder.AddContent(85, "Save and Back");
            builder.CloseElement();
            builder.AddMarkupContent(86, "\r\n");
            builder.OpenElement(87, "p");
            builder.AddAttribute(88, "class", "error");
            builder.AddContent(89, errormessage);
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 43 "C:\Users\rafae\source\repos\betuapp\betuapp.Client\Pages\betdetail.razor"
           
    public string errormessage;
    public string Name;
    public string Description;
    public DateTime DueDate;
    public long Tip;
    public Account challenged;
    public string Evidence;
    public bool consentTrue;
    public bool consentFalse;
    public bool ConsentGiven;

    async Task GiveConsent()
    {
        ConsentGiven = true;
    }
    async Task GiveNotConsent()
    {
        ConsentGiven = false;
    }

    protected override async Task OnInitAsync()
    {
        this.Name = this.detailState.ClickedBetDetail.Name;
        this.Description = this.detailState.ClickedBetDetail.Description;
        this.DueDate = this.detailState.ClickedBetDetail.DueDate;
        this.Tip = this.detailState.ClickedBetDetail.Tip;
        this.challenged = this.detailState.ClickedBetDetail.Challenged;

        if (this.authenticationstate.loggedInAccount.Id == this.detailState.ClickedBetDetail.Challenger.Id)
        {
            ConsentGiven = this.detailState.ClickedBetDetail.ConsentChallengerGiven;
            if (this.detailState.ClickedBetDetail.ConsentChallengerGiven)
            {
                consentTrue = (this.detailState.ClickedBetDetail.ChallengerWonChallenger == true);
                consentFalse = !consentTrue;
            }
        }
        else
        {
            ConsentGiven = this.detailState.ClickedBetDetail.ConsentChallengedGiven;
            if (this.detailState.ClickedBetDetail.ConsentChallengedGiven)
            {
                consentTrue = (this.detailState.ClickedBetDetail.ChallengerWonChallenged == true);
                consentFalse = !consentTrue;
            }
        }
    }

    async Task Save()
    {
        if (ConsentGiven)
        {
            if (consentFalse == true && consentTrue == true)
            {
                errormessage = "invalid consent";
                return;
            }
            if (consentFalse == false && consentTrue == false)
            {
                errormessage = "invalid consent";
                return;
            }
        }

        var bet = this.detailState.ClickedBetDetail;
        bet.Evidence = this.Evidence;

        if(this.authenticationstate.loggedInAccount.Id == this.detailState.ClickedBetDetail.Challenger.Id)
        {
            bet.ConsentChallengerGiven = ConsentGiven;
        }
        else
        {
            bet.ConsentChallengedGiven = ConsentGiven;
        }

        if (this.authenticationstate.loggedInAccount.Id == this.detailState.ClickedBetDetail.Challenger.Id && ConsentGiven)
        {
            bet.ChallengerWonChallenger = this.consentTrue;
            bet.ConsentChallengerGiven = true;
        }
        if (this.authenticationstate.loggedInAccount.Id == this.detailState.ClickedBetDetail.Challenged.Id && ConsentGiven)
        {
            bet.ChallengerWonChallenged = this.consentTrue;
            bet.ConsentChallengedGiven = true;
        }

        if (bet.ChallengerWonChallenger == true && bet.ChallengerWonChallenger == bet.ChallengerWonChallenged && bet.ConsentChallengerGiven && bet.ConsentChallengedGiven)
        {
            bet.IstAbgeschlossen = true;
            bet.ChallengerWon = true;
        }
        if (bet.ChallengerWonChallenger == false && bet.ChallengerWonChallenger == bet.ChallengerWonChallenged && bet.ConsentChallengedGiven && bet.ConsentChallengerGiven)
        {
            bet.IstAbgeschlossen = true;
            bet.ChallengerWon = false;
        }

        if(bet.ConsentChallengedGiven != true || bet.ConsentChallengerGiven != true)
        {
            bet.IstAbgeschlossen = false;
        }

        if(bet.ChallengerWonChallenger != bet.ChallengerWonChallenged)
        {
            bet.IstAbgeschlossen = false;
        }

        var result = await Http.SendJsonAsync<ExtentedBet>(HttpMethod.Post, "api/BetData/UpdateBet", bet);
        this.uriHelper.NavigateTo("/MyBets");
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUriHelper uriHelper { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private betuapp.Client.States.DetailState detailState { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private betuapp.Client.States.AuthenticationState authenticationstate { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
